#https://idroot.us/linux/install-mail-server-postfixadmin-centos-7/
---
- name: check if there is apache
  stat:
    path: /usr/sbin/httpd
  register: httpd_status

- name: check if there is php-fpm
  stat:
    path: /opt/remi/php{{ php_version }}/root/usr/sbin/php-fpm
  register: php_fpm_status

- name: (if php-fpm) copy nginx config
  blockinfile:
    marker: "# {mark} postfixadmin"
    insertafter: "## postadmin"
    block: |
      rewrite ^/postadmin/?(.*)$ /postfixadmin/$1 redirect;

      location /postfixadmin/ {
          alias /var/www/postfixadmin/public/;

          #auth_basic "Speak, friend, and enter.";
          #auth_basic_user_file conf.d/htpasswd;

          fastcgi_index index.php;
          fastcgi_pass unix:/var/run/postfixadmin.sock;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          include fastcgi_params;

          location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|avi|djvu|mp3)$ {
              expires max;
          }

      }
    path: /etc/nginx/vhosts/{{ ansible_default_ipv4.address }}.conf
  when: php_fpm_status.stat.exists
  notify: restart nginx

- name: (if apache) copy nginx config
  blockinfile:
    marker: "# {mark} postfixadmin"
    insertafter: "## postadmin"
    block: |
      rewrite ^/postadmin/?(.*)$ /postfixadmin/$1 redirect;

      location /postfixadmin/ {
          alias /var/www/postfixadmin/public/;

          #auth_basic "Speak, friend, and enter.";
          #auth_basic_user_file conf.d/htpasswd;

          proxy_pass http://127.0.0.1:8080;
          proxy_redirect off;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          proxy_read_timeout 300;
          client_max_body_size 256m;

          proxy_buffer_size 16k;
          proxy_buffers 32 16k;

          location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|avi|djvu|mp3)$ {
              expires max;
          }
      }
    path: /etc/nginx/vhosts/{{ ansible_default_ipv4.address }}.conf
  when: httpd_status.stat.exists
  notify: restart nginx

- name: copy php-fpm config
  copy:
    src: centos_fpm.conf
    dest: /etc/opt/remi/php{{ php_version }}/php-fpm.d/postfixadmin.conf
  when: php_fpm_status.stat.exists
  notify: restart php-fpm centos

- name: copy httpd config
  template:
    src: httpd_vhost.conf.j2
    dest: /etc/httpd/conf.d/postfixadmin.conf
    mode: 0644
  when: httpd_status.stat.exists
  notify: restart httpd

- name: create pfxadmin db
  mysql_db:
    name: postfixadmin
    collation: utf8_unicode_ci

- name: create pfxadmin mysql user
  mysql_user:
    name: postfixadmin
    password: "{{ lookup('password', '/root/06-pfxadmin_db_password chars=ascii_letters,digits length=20') }}"
    priv: 'postfixadmin.*:ALL'
    host: localhost

- name: copy postfixadmin
  copy:
    src: postfixadmin.tar.gz
    dest: /tmp/postfixadmin.tar.gz

- name: install postfixadmin
  shell: |
    tar -xvf /tmp/postfixadmin.tar.gz -C /var/www/
    mv /var/www/postfixadmin* /var/www/postfixadmin
    cp /var/www/postfixadmin/config.inc.php /var/www/postfixadmin/config.local.php
    chown -R apache: /var/www/postfixadmin
    rm /tmp/postfixadmin.tar.gz
  args:
    warn: false

- name: copy pfxadmin config file
  copy:
    src: pfx_config_file
    dest: /var/www/postfixadmin/config.local.php
    mode: 0644

- name: change database_password var in pfx_config
  replace:
    path: /var/www/postfixadmin/config.local.php
    regexp: 'postfix_database_password_string'
    replace: "{{ lookup('file', '/root/06-pfxadmin_db_password') }}"

- name: create templates_c directory
  file:
    path: /var/www/postfixadmin/templates_c
    state: directory
    owner: apache
    group: apache

- meta: flush_handlers

- name: generate postfixadmin setup password
  shell: curl -X POST -F form="setuppw" -F setup_password="{{ lookup('password', '/root/061-pfxadmin_setup_password chars=ascii_letters,digits,hexdigits length=15') }}" -F setup_password2="{{ lookup('password', '/root/061-pfxadmin_setup_password') }}" http://{{ ansible_default_ipv4.address }}/postfixadmin/setup.php
  args:
    warn: false
  register: curl_result

#- name: generate postfixadmin setup password
#  uri:
#    url: http://{{ ansible_default_ipv4.address }}/postfixadmin/setup.php
#    method: POST
#    body_format: form-urlencoded
#    body:
#    - [ form, setuppw ]
#    - [ setup_password, "{{ lookup('password', '/root/061-pfxadmin_setup_password chars=ascii_letters,digits,hexdigits length=15') }}" ]
#    - [ setup_password2, "{{ lookup('password', '/root/061-pfxadmin_setup_password') }}" ]
#    status_code: 200
#  register: curl_result

- name: save curl result as file
  copy:
    content: "{{ curl_result.stdout }}"
    dest: /root/ansible/curl_result.txt

- name: extract postfixadmin setup password hash
  shell: setup_pass_hash=$(grep '<pre>' /root/ansible/curl_result.txt) && echo ${setup_pass_hash:171:73}
  register: extract_result

- name: get setup password hash into postfixadmin config
  replace:
    path: /var/www/postfixadmin/config.local.php
    regexp: 'changeme'
    replace: "{{ extract_result.stdout }}"

- name: replace php binary path in postfixadmin-cli script
  replace:
    path: '/var/www/postfixadmin/scripts/postfixadmin-cli'
    regexp: 'exec php'
    replace: 'exec /opt/remi/php{{php_version}}/root/bin/php'

- name: add postfixadmin admin user
  shell: bash /var/www/postfixadmin/scripts/postfixadmin-cli admin add admin@{{ vhost }} --password "{{ lookup('password', '/root/062-pfxadmin_admin_password chars=ascii_letters,digits,hexdigits length=15') }}" --password2 "{{ lookup('password', '/root/062-pfxadmin_admin_password') }}" --superadmin 1 --active 1

- name: insert pfxadmin setup password text
  blockinfile:
    dest: /root/061-pfxadmin_setup_password
    insertbefore: BOF
    block: |

      Setup password для postfixadmin:

- name: insert pfxadmin db password
  blockinfile:
    dest: /root/06-pfxadmin_db_password
    insertbefore: BOF
    block: |

      Данные для доступа к базе данных postfixadmin:
      Пользователь: postfixadmin

- name: insert pfxadmin db password
  blockinfile:
    dest: /root/062-pfxadmin_admin_password
    insertbefore: BOF
    block: |

      Администратор postfixadmin:
      Логин: admin@{{ vhost }}

#TODO
# generate pfxadmin setup password and put hash into /var/www/postfixadmin/config.local.php
# {{ lookup('password', '/root/07-pfxadmin_admin_password chars=ascii_letters,digits length=15') }}
