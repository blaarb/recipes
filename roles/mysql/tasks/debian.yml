---
- name: Install mysql and tools
  apt:
    state: latest
    name: "{{ mysql_packages }}"
  vars:
    mysql_packages:
    - mysql-server
    - python-mysqldb

- name: change mysql bind-address
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '127\.0\.0\.1'
    line: 'bind-address = 127.0.0.1'
  when: ansible_facts['distribution'] == "Ubuntu"

- name: change mysql bind-address
  lineinfile:
    path: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: '127\.0\.0\.1'
    line: 'bind-address = 127.0.0.1'
  when: ansible_facts['distribution'] == "Debian"

- name: Ensure mysql is started and enabled
  service:
    name: mysql
    state: started
    enabled: yes

- name: add website db
  mysql_db:
    state: present
    name: "{{ ansible_hostname }}"
    collation: utf8_unicode_ci
  tags: website_stack

- name: add db user
  mysql_user:
    state: present
    name: "{{ ansible_hostname }}"
    host: localhost
    password: "{{ lookup('password', '/root/03-mysql_password chars=ascii_letters,digits,hexdigits length=15') }}"
    priv: '{{ ansible_hostname }}.*:ALL'
  tags: website_stack

- name: insert mysql user name into user password file
  blockinfile:
    dest: /root/03-mysql_password
    insertbefore: BOF
    block: |

      Данные для доступа к базе данных:
      Имя БД: {{ ansible_hostname }}
      Пользователь: {{ ansible_hostname }}
  tags: website_stack

- name: remove anonymous users
  mysql_user:
    state: absent
    name: ''
    host_all: yes

- name: remove test db
  mysql_db:
    state: absent
    name: test

- name: change root password
  mysql_user:
    state: present
    name: root
    host: localhost
    password: "{{ lookup('password', '/root/04-mysqlr_password chars=ascii_letters,digits,hexdigits length=15') }}"

- name: copy root mysql password file
  copy:
    dest: /root/.my.cnf
    src: root_my_cnf
    owner: root
    group: root
    mode: 0660

- name: add root password to root homedir my.cnf file
  replace:
    path: /root/.my.cnf
    regexp: '^password'
    replace: 'password="{{ file_contents }}"'
  vars:
    file_contents: "{{ lookup('file', '/root/04-mysqlr_password') }}"

- name: insert root mysql user name into root password file
  blockinfile:
    dest: /root/04-mysqlr_password
    insertbefore: BOF
    block: |

      Пароль от mysql root-пользователя:
